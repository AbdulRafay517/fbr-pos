// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  EMPLOYEE
  VIEWER
}

enum InvoiceStatus {
  UNPAID
  PAID
  DUE_SOON
  OVERDUE
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  invoices  Invoice[]
}

model Client {
  id        String   @id @default(uuid())
  name      String
  type      String   // VENDOR or CLIENT
  contact   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  branches  Branch[]
  invoices  Invoice[]
}

model Branch {
  id        String   @id @default(uuid())
  name      String
  city      String
  province  String
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  invoices  Invoice[]
}

model Invoice {
  id            String        @id @default(uuid())
  invoiceNumber String        @unique
  date          DateTime
  dueDate       DateTime?
  status        InvoiceStatus @default(UNPAID)
  subtotal      Float
  taxAmount     Float
  totalAmount   Float
  pdfUrl        String?
  notes         String?
  clientId      String
  client        Client        @relation(fields: [clientId], references: [id])
  branchId      String
  branch        Branch        @relation(fields: [branchId], references: [id])
  createdById   String
  createdBy     User          @relation(fields: [createdById], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  items         InvoiceItem[]
  statusHistory InvoiceStatusHistory[]
}

model InvoiceItem {
  id          String   @id @default(uuid())
  description String
  quantity    Float
  unitPrice   Float
  total       Float
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model InvoiceStatusHistory {
  id        String        @id @default(uuid())
  invoiceId String
  invoice   Invoice       @relation(fields: [invoiceId], references: [id])
  status    InvoiceStatus
  changedBy String?       // User ID who changed the status (null for automatic changes)
  reason    String?       // Reason for status change
  createdAt DateTime      @default(now())
}

model TaxRule {
  id        String   @id @default(uuid())
  province  String   @unique
  percentage Float
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemConfig {
  id              String   @id @default(uuid())
  key             String   @unique
  value           String
  description     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}